server:
  port: 8088
  servlet:
    session:
      tracking-modes: cookie
spring:
  jpa:
    hibernate:
      ddl-auto: update  # jpa로 entity 처음 생성시 테이블 없으면 create, 만든 다음엔 update로 변경해야함
    properties:
      hibernate:
        format_sql: true
        show_sql: true
        
  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    url: jdbc:mariadb://nadoo-mariadb.cziewzjo5jqh.ap-northeast-1.rds.amazonaws.com:3306/nadoo?characterEncoding=UTF-8
    username: admin
    password: nadoo1234

  # 콘솔창 로그에 색을 입혀 더 가독성있게 보기 가능
  output:
    ansi:
      enabled: always
  # 타임리프 설정
  thymeleaf:
    prefix: classpath:/templates/
    suffix: .html
    cache: false    # thymeleaf 캐싱 false 로 해서 html 파일에 영향 없게 하기

  # Naver
#  security:
#    oauth2:
#      client:
#        registration:
#          naver:
#            client-id: kFXWxG9S3JYGuLNlgz3l
#            client-secret: ckWI_3YivU
#            # Naver Spring Security 수동 입력
#            redirect-uri: http://localhost:8088/login/naver
#            authorization-grant-type: authorization_code
#            scope:
#              - email
#              - nickname
#              - mobile
#            client-name: Naver
#        # provider
#        provider:
#          naver:
#            authorization-uri: https://nid.naver.com/oauth2.0/authorize
#            token-uri: https://nid.naver.com/oauth2.0/token
#            user-info-uri: https://openapi.naver.com/v1/nid/me
#            # Security의 기준이 되는 username의 이름을 네이버에서는 response로 (회원 조회시 반환되는 JSON 형태 때문)
#            user-name-attribute: response



# JPA 내부에서 DEBUG 로그 레벨을 지정한 부분의 로그 확인 가능
logging:
  level:
    org:
      springframework:
        orm:
          jpa: "debug"